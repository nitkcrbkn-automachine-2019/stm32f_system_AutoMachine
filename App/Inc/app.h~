#ifndef __APP_H
#define __APP_H

/*NO Device mode*/
#define _NO_DEVICE 0

int appTask(void);
int appInit(void);

/**********************************************************************************************************/
/***********************************************************************************************************/
/***********************************************************************************************************/
#define RESET_DESK_A_DISTANCE ((170/ENCODER_OMNI_DISTANCE_PER_REVOLUTION)*ENCODER_SMALL_PULSE_PER_REVOLUTION)
#define RESET_DESK_B_DISTANCE ((170/ENCODER_OMNI_DISTANCE_PER_REVOLUTION)*ENCODER_SMALL_PULSE_PER_REVOLUTION)
#define RESET_DESK_C_DISTANCE ((170/ENCODER_OMNI_DISTANCE_PER_REVOLUTION)*ENCODER_SMALL_PULSE_PER_REVOLUTION)
/***********************************************************************************************************/
/***********************************************************************************************************/
/***********************************************************************************************************/


#define DD_NUM_OF_MD 9
#define DD_NUM_OF_AB 0

#define DD_NUM_OF_SS 5
#define DD_USE_ENCODER1 1
#define DD_USE_ENCODER2 1
#define DD_NUM_OF_SV 0

#define USE_SENSOR_AREA 1
#define USE_CONTROL_PANEL 1
#define USE_CONTROL_PANEL_IN_NOCOLOR 0
#define DD_USE_RC 0

#include "DD_RC.h"
#include "DD_MD.h"
#include "DD_SV.h"
#include "DD_SS.h"

#define MECHA1_MD1 0
#define MECHA1_MD2 1
#define CENTRAL_THRESHOLD 4

#define KUDO_LF 0
#define KUDO_LB 1
#define KUDO_RB 2
#define KUDO_RF 3

#define PULLMECHA 4
#define RELEASEMECHA 5
#define DEGREEMECHA 6
#define RELOADMECHA 7

#define PHOTOARRAY_FRONT 1
#define PHOTOARRAY_BEHIND 2
#define CONTROL_PANEL_1 3
#define CONTROL_PANEL_2 4

#define I2C_ENCODER_1 0
#define I2C_ENCODER_2 3

#define AB0 (1<<0)
#define AB1 (1<<1)


#define _SW_PULLMECHA_LIMIT_GPIOxID GPIOAID
#define _SW_PULLMECHA_LIMIT_GPIOPIN GPIO_PIN_11
#define _IS_PRESSED_PULLMECHA_LIMITSW() ((!MW_GPIORead(_SW_PULLMECHA_LIMIT_GPIOxID,_SW_PULLMECHA_LIMIT_GPIOPIN)))

#define _SW_RELEASEMECHA_LIMIT_GPIOxID GPIOBID
#define _SW_RELEASEMECHA_LIMIT_GPIOPIN GPIO_PIN_12
#define _IS_PRESSED_RELEASEMECHA_LIMITSW() ((!MW_GPIORead(_SW_RELEASEMECHA_LIMIT_GPIOxID,_SW_RELEASEMECHA_LIMIT_GPIOPIN)))

#define _SW_RELE_PULLMECHA_LIMIT_GPIOxID GPIOBID
#define _SW_RELE_PULLMECHA_LIMIT_GPIOPIN GPIO_PIN_2
#define _IS_PRESSED_RELE_PULL_LIMITSW() ((!MW_GPIORead(_SW_RELE_PULLMECHA_LIMIT_GPIOxID,_SW_RELE_PULLMECHA_LIMIT_GPIOPIN)))

#define _SW_DEGREEMECHA_LIMIT_GPIOxID GPIOAID
#define _SW_DEGREEMECHA_LIMIT_GPIOPIN GPIO_PIN_12
#define _IS_PRESSED_DEGREEMECHA_LIMITSW() ((!MW_GPIORead(_SW_DEGREEMECHA_LIMIT_GPIOxID,_SW_DEGREEMECHA_LIMIT_GPIOPIN)))

#define _SW_WAITPOSITION_LIMIT_GPIOxID GPIOCID
#define _SW_WAITPOSITION_LIMIT_GPIOPIN GPIO_PIN_8
#define _IS_PRESSED_WAITPOSITION_LIMITSW() ((!MW_GPIORead(_SW_WAITPOSITION_LIMIT_GPIOxID,_SW_WAITPOSITION_LIMIT_GPIOPIN)))

#define _SW_FRONT_FOOTSW_GPIOxID GPIOCID
#define _SW_FRONT_FOOTSW_GPIOPIN GPIO_PIN_0
#define _IS_PRESSED_FRONT_FOOTSW() ((!MW_GPIORead(_SW_FRONT_FOOTSW_GPIOxID,_SW_FRONT_FOOTSW_GPIOPIN)))

#define _SW_BACK_FOOTSW_GPIOxID GPIOCID
#define _SW_BACK_FOOTSW_GPIOPIN GPIO_PIN_1
#define _IS_PRESSED_BACK_FOOTSW() ((!MW_GPIORead(_SW_BACK_FOOTSW_GPIOxID,_SW_BACK_FOOTSW_GPIOPIN)))

#define MD_GAIN ( DD_MD_MAX_DUTY / DD_RC_ANALOG_MAX )

#define ENCODER_SMALL_PULSE_PER_REVOLUTION 600
#define ENCODER_OMNI_DISTANCE_PER_REVOLUTION 15.0796
#define ENCODER_RELEASEMECHA_DISTANCE_PER_REVOLUTION 9.4247
#define ENCODER_DEGREEMECHA_DISTANCE_PER_REVOLUTION 1.0
  
#define MAX_DUTY 9900
#define CONT_ABS_MAX 91

#define REALMODE_SUS_MAXDUTY 7000

#define MOVEFRONT_SPEEDDOWN_VALUE ((50/ENCODER_OMNI_DISTANCE_PER_REVOLUTION)*ENCODER_SMALL_PULSE_PER_REVOLUTION)
#define MOVEFRONT_STOP_VALUE ((5/ENCODER_OMNI_DISTANCE_PER_REVOLUTION)*ENCODER_SMALL_PULSE_PER_REVOLUTION) 
#define MOVEFRONT_MAX_DUTY -45
#define MOVEFRONT_MIN_DUTY -26
#define MOVEFRONT_INC_CON 75
#define MOVEFRONT_DEC_CON 100

#define MOVEBACK_SPEEDDOWN_VALUE ((50/ENCODER_OMNI_DISTANCE_PER_REVOLUTION)*ENCODER_SMALL_PULSE_PER_REVOLUTION)
#define MOVEBACK_STOP_VALUE ((5/ENCODER_OMNI_DISTANCE_PER_REVOLUTION)*ENCODER_SMALL_PULSE_PER_REVOLUTION) 
#define MOVEBACK_MAX_DUTY 45
#define MOVEBACK_MIN_DUTY 26
#define MOVEBACK_INC_CON 50
#define MOVEBACK_DEC_CON 50

#define MOVERIGHT_SPEEDDOWN_VALUE ((150/ENCODER_OMNI_DISTANCE_PER_REVOLUTION)*ENCODER_SMALL_PULSE_PER_REVOLUTION) 
#define MOVERIGHT_STOP_VALUE ((3/ENCODER_OMNI_DISTANCE_PER_REVOLUTION)*ENCODER_SMALL_PULSE_PER_REVOLUTION) 
#define MOVERIGHT_MAX_DUTY -60
#define MOVERIGHT_MIN_DUTY -17
#define MOVERIGHT_INC_CON 50
#define MOVERIGHT_DEC_CON 50

#define MOVELEFT_SPEEDDOWN_VALUE ((150/ENCODER_OMNI_DISTANCE_PER_REVOLUTION)*ENCODER_SMALL_PULSE_PER_REVOLUTION) 
#define MOVELEFT_STOP_VALUE ((3/ENCODER_OMNI_DISTANCE_PER_REVOLUTION)*ENCODER_SMALL_PULSE_PER_REVOLUTION) 
#define MOVELEFT_MAX_DUTY 60
#define MOVELEFT_MIN_DUTY 17
#define MOVELEFT_INC_CON 50
#define MOVELEFT_DEC_CON 50

#define MOVERIGHT_BACK_DUTY 5
#define MOVELEFT_BACK_DUTY 5
#define MOVESIDE_SPIN_MAX_DUTY 2
#define MOVESIDE_SPIN_MIN_DUTY 1

#define MOVE_DESKD_SIDE_MAX_DUTY 45
#define MOVE_DESKD_SIDE_MIN_DUTY 7
#define MOVE_DESKD_FRONT_MAX_DUTY -20
#define MOVE_DESKD_FRONT_MIN_DUTY -8
#define MOVE_DESKD_BACK_MAX_DUTY 50
#define MOVE_DESKD_BACK_MIN_DUTY 10
#define MOVE_DESKD_RIGHT_MAX_DUTY -50
#define MOVE_DESKD_RIGHT_MIN_DUTY -30
#define MOVE_DESKD_LEFT_MAX_DUTY 50
#define MOVE_DESKD_LEFT_MIN_DUTY 30

#define STARTZONE_LINE_VALUE ((200/ENCODER_OMNI_DISTANCE_PER_REVOLUTION)*ENCODER_SMALL_PULSE_PER_REVOLUTION)

#define MOVEOFFSET_INC_CON 100
#define MOVEOFFSET_DEC_CON 150

#define ADJUST_LINECENTER_STRAIGHTDUTY 0
#define ADJUST_COUNT 200

#define PULLMECHA_INC_CON 2000
#define PULLMECHA_DEC_CON 8000
#define PULLMECHA_MAX_DUTY 6000

#define RELEASEMECHA_INC_CON 2000
#define RELEASEMECHA_DEC_CON 9500
#define RELEASEMECHA_MAX_DUTY 6000
#define RELEASEMECHA_MIN_DUTY 1900
#define RELEASEMECHA_SPEEDDOWN_VALUE ((2/ENCODER_RELEASEMECHA_DISTANCE_PER_REVOLUTION)*ENCODER_SMALL_PULSE_PER_REVOLUTION) 
#define RELEASEMECHA_STOP_VALUE ((0.2/ENCODER_RELEASEMECHA_DISTANCE_PER_REVOLUTION)*ENCODER_SMALL_PULSE_PER_REVOLUTION) 

#define DEGREEMECHA_INC_CON 4000
#define DEGREEMECHA_DEC_CON 8000
#define DEGREEMECHA_MAX_DUTY 8000
#define DEGREEMECHA_MIN_DUTY 3000
#define DEGREEMECHA_SPEEDDOWN_VALUE ((2.0/ENCODER_DEGREEMECHA_DISTANCE_PER_REVOLUTION)*ENCODER_SMALL_PULSE_PER_REVOLUTION) 
#define DEGREEMECHA_STOP_VALUE ((0.5/ENCODER_DEGREEMECHA_DISTANCE_PER_REVOLUTION)*ENCODER_SMALL_PULSE_PER_REVOLUTION) 

#define MOVEGO_LINE_A_VALUE ((570/ENCODER_OMNI_DISTANCE_PER_REVOLUTION)*ENCODER_SMALL_PULSE_PER_REVOLUTION)

#define MOVEGO_LINE_B_VALUE ((470/ENCODER_OMNI_DISTANCE_PER_REVOLUTION)*ENCODER_SMALL_PULSE_PER_REVOLUTION)

#define MOVEGO_LINE_C_VALUE ((370/ENCODER_OMNI_DISTANCE_PER_REVOLUTION)*ENCODER_SMALL_PULSE_PER_REVOLUTION)

#define MOVEGO_LINE_D_VALUE ((260/ENCODER_OMNI_DISTANCE_PER_REVOLUTION)*ENCODER_SMALL_PULSE_PER_REVOLUTION)

#define MOVERETURN_LINE_A_VALUE ((580/ENCODER_OMNI_DISTANCE_PER_REVOLUTION)*ENCODER_SMALL_PULSE_PER_REVOLUTION)

#define MOVERETURN_LINE_B_VALUE ((480/ENCODER_OMNI_DISTANCE_PER_REVOLUTION)*ENCODER_SMALL_PULSE_PER_REVOLUTION)

#define MOVERETURN_LINE_C_VALUE ((380/ENCODER_OMNI_DISTANCE_PER_REVOLUTION)*ENCODER_SMALL_PULSE_PER_REVOLUTION)

#define MOVERETURN_LINE_D_VALUE ((260/ENCODER_OMNI_DISTANCE_PER_REVOLUTION)*ENCODER_SMALL_PULSE_PER_REVOLUTION)


#define SUSPENSION_STOP_DUTY 10 //駆動が本体重量によって停止してしまうデューティ

#define MANUAL_SUS_MAX_DUTY 8000

#define TESTMODE_MAX_DUTY 4000
#define RC_MAX_VALUE 64
#define CENTRAL_THRESHOLD 4

#define RECEIVE_WAIT_TIME 250

#define LED_BRINK_INTERVAL 25
#define LED_BRINK_DUTY 85

#define SW_START 17
#define SW_STOP 18
#define SW_RESET 19
#define SW_ZONE 29
#define SW_POWER_UP 31 
#define SW_POWER_DOWN 30
#define SW_WAIT_SHOT 28
#define SW_FUN 1
#define SW_LED_BRINK 26
#define SW_TAR_MV_FRONT 7
#define SW_TAR_MV_CENTER 6
#define SW_TAR_MV_BACK 5
#define SW_TAR_FIX_TOP 4
#define SW_TAR_FIX_BOTTOM 3
#define SW_TAR_FIX_RIGHT 2
#define SW_SENSOR_AREA 27
#define SW_TAR_FIX_LEFT 0
#define SW_DIRECTION 16
#define SW_MV_1 15
#define SW_MV_2 14
#define SW_MV_3 13
#define SW_MV_4 11 
#define SW_MV_5 10
#define SW_MV_6 9
#define SW_MV_7 8
#define SW_MV_8 12

#define SW_ZONE_RED 20
#define SW_ZONE_BLUE 21
#define SW_MV_FORWARD 22
#define SW_MV_BACKWARD 23

#define SW_UP_VALUE 10
#define SW_DOWN_VALUE 10

typedef enum{
  RED = 0,
  BLUE = 1,
}GameZone_t;

typedef enum{
  S_A = 0,
  S_B = 1,
  S_C = 2,
  S_D = 3,
  A_S = 4,
  A_B = 5,
  A_C = 6,
  A_D = 7,
  B_S = 8,
  B_A = 9,
  B_C = 10,
  B_D = 11,
  C_S = 12,
  C_A = 13,
  C_B = 14,
  C_D = 15,
  D_S = 16,
  D_A = 17,
  D_B = 18,
  D_C = 19,
  S_E = 20,
  E_S = 21,
}TargettoTarget_t;

typedef enum{
  FRONT = 0,
  BACK  = 1,
  RIGHT = 2,
  LEFT  = 3,
  NOTHING = 4,
}TargetMoveDirection_t;

typedef enum{
  MAXSPEED = 0,
  MINSPEED = 1,
  STOP = 2,
  OVERRUN = 3,
  MOVE_END = 4,
  MOVE_OFFSET = 5,
}SuspensionMoveState_t;

typedef enum{
  MOVE_STOP = 0,
  MOVE_CONTINUE = 1,
}SuspensionStopType_t;

typedef enum{
  FIRSTRESET = 0,
  SECONDRESET = 1,
  FINISH = 2,
}ShotMechaResetState_t;

typedef enum{
  SET_READY = 0,
  SET_OK = 1,
}ShotMechaSetState_t;

typedef enum{
  SHOTMECHA_RESET = 0,
  PULLING = 1,
  WAIT_PERFECT_RELEASE = 2,
  COMPLETED_SHOT = 3,
}ShotState_t;

typedef enum{
  ADJUST_READY = 0,
  ADJUST_OK = 1,
}AdjustLineState_t;

typedef enum{
  GET_ENCODER_VALUE = 0,
  RESET_ENCODER_VALUE = 1,
}EncoderOperation_t;

typedef enum{
  RESET_MECHA = 0,
  SET_POWER = 1,
  SHOT_BOTTLE = 2,
}ShotActionState_t;

typedef enum{
  RECENT_DATA =0,
  CURRENT_DATA=1,
  RESET_DATA  = 2,
}LineTrace_State_t;

typedef enum{
  D_RIGHT=0,
  D_LEFT=1,
  D_FRONT_RIGHT=2,
  D_FRONT_LEFT=3,
  D_MIDDLE = 4,
  NO_LINE = 5,
}Direction_t;

typedef struct{
  uint8_t gap_degree;
  Direction_t direction;
}Robot_Direction_t;

typedef enum{
  MV_FRONT = 0,
  MV_CENTER = 1,
  MV_BACK = 2,
  FIX_TWO = 3,
  FIX_TWO_TOP = 4,
  FIX_TWO_BOTTOM = 5,
  FIX_RIGHT = 6,
  FIX_CENTER = 7,
  FIX_LEFT = 8,
  START_ZONE = 9,
}Desk_t;

typedef enum{
  ON = 0,
  OFF = 1,
}LedMode_t;

typedef enum{
  MOVE_PULLMECHA = 0,
  MOVE_RELEASEMECHA = 1,
  MOVE_DEGREEMECHA = 2,
  RESET_SHOTMECHA = 3,
  RESET_DEGREEMECHA = 4,
  SET_DEGREEMECHA = 5,
  AUTO_SHOT = 6,
  MANUAL_SUSPENSION = 7,
  AUTO_SUS_FRONT = 8,
  AUTO_SUS_BACK = 9,
  AUTO_SUS_LEFT = 10,
  AUTO_SUS_RIGHT = 11,
  MOVE_SUS_LF = 12,
  MOVE_SUS_LB = 13,
  MOVE_SUS_RB = 14,
  MOVE_SUS_RF = 15,
  TRACE_LINE = 16,
  TRACE_UNTIL_FRONT_TOUCH = 17,
  MOVE_LEFT_LINE_C = 18,
  MOVE_LEFT_LINE_S = 19,
  MOVE_LEFT_LINE_M = 20,
  MOVE_LEFT_LINE_L = 21,
  ALL_MOVING_DESK_A = 22,
  ALL_MOVING_DESK_B = 23,
  ALL_MOVING_DESK_C = 24,
  ALL_MOVING_DESK_D_TOP = 25,
  ALL_MOVING_DESK_D_BOTTOM = 26,
  ALL_MOVING_DESK_E = 27,
  NO_OPERATION = 28,
  STOP_EVERYTHING = 29,
}TestMode_t;

#endif
